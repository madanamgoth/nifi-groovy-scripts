plugins {
    id 'groovy'
    id 'java-library'
}

group = 'com.example'
version = '1.0.0'

repositories {
    mavenCentral()
}

dependencies {
    // Groovy dependency
    implementation 'org.apache.groovy:groovy:4.0.15'
    
    // Redis client (Jedis)
    implementation 'redis.clients:jedis:4.4.3'
    
    // NiFi API (provided - will be available at runtime)
    compileOnly 'org.apache.nifi:nifi-api:1.23.2'
    compileOnly 'org.apache.nifi:nifi-processor-utils:1.23.2'
    
    // Testing
    testImplementation 'org.spockframework:spock-core:2.3-groovy-4.0'
    testImplementation 'junit:junit:4.13.2'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

// Task to create a fat JAR with all dependencies
task fatJar(type: Jar) {
    archiveClassifier = 'all'
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
    
    // Exclude META-INF files that might cause conflicts
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
}

// Task to create a JAR without dependencies (for use with existing classpath)
jar {
    archiveClassifier = ''
    from sourceSets.main.output
    
    manifest {
        attributes(
            'Implementation-Title': project.name,
            'Implementation-Version': project.version,
            'Built-By': System.getProperty('user.name'),
            'Built-Date': new Date(),
            'Built-JDK': System.getProperty('java.version'),
            'Built-Gradle': gradle.gradleVersion
        )
    }
}

// Clean task
clean {
    delete 'build'
    delete 'out'
}

// Default build task
defaultTasks 'clean', 'build', 'fatJar'